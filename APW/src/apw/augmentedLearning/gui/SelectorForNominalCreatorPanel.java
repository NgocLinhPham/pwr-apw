package apw.augmentedLearning.gui;

import apw.augmentedLearning.controls.NominalValuesChooser;
import apw.augmentedLearning.logic.Selector;
import apw.augmentedLearning.logic.SelectorForNominal;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.ComboBoxModel;
import javax.swing.event.ListDataListener;


/*
 * SFNom.java
 *
 * Created on 2009-05-14, 23:36:40
 */


/**
 *
 * @author Nitric
 */
public class SelectorForNominalCreatorPanel extends SelectorCreatorPanel {

    private String attributesName = "Nieznana nazwa";
    private int attributesNumber;
    private int amountOfAllValues;
    private HashSet<String> values;
    private HashSet<String> allowedValues;
    private ComplexCreatorFrame parentFrame;
    
    public SelectorForNominalCreatorPanel() {
        initComponents();
    }

    public SelectorForNominalCreatorPanel(int attrId, String attrName, HashSet<String> values, ComplexCreatorFrame parent) {
        this.attributesNumber = attrId;
        this.attributesName = attrName;
        this.values = values;
        this.allowedValues = values;
        this.parentFrame = parent;
        amountOfAllValues = values.size();
        initComponents();
    }

    public void setAllowedValues(HashSet<String> allowedValues) {
        this.allowedValues = allowedValues;
        NominalComboBoxModel cbm = new NominalComboBoxModel();
        cbm.setData(allowedValues);
        jcb_values.setModel(cbm);
    }

    public String getAttributesName() {
        return attributesName;
    }

    public void setAttributesName(String attributesName) {
        this.attributesName = attributesName;
    }

    public int getAttributesNumber() {
        return attributesNumber;
    }

    public void setAttributesNumber(int attributesNumber) {
        this.attributesNumber = attributesNumber;
    }

    public HashSet<String> getValues() {
        return values;
    }

    public void setValues(HashSet<String> values) {
        this.values = values;
        amountOfAllValues = values.size();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcb_negation = new javax.swing.JCheckBox();
        jl_name = new javax.swing.JLabel();
        jcb_values = new javax.swing.JComboBox(values.toArray());
        jb_modify = new javax.swing.JButton();

        jcb_negation.setText("Negacja");
        jcb_negation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_negationActionPerformed(evt);
            }
        });
        jcb_negation.setEnabled(false);

        jl_name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jl_name.setText(attributesName);

        jb_modify.setText("Modyfikuj");
        jb_modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_modifyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcb_negation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jl_name, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcb_values, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jb_modify, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jcb_negation, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addComponent(jl_name)
                .addComponent(jcb_values, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jb_modify))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jcb_negationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_negationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcb_negationActionPerformed

    private void jb_modifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_modifyActionPerformed
        new NominalValuesChooser(parentFrame, this, values, attributesName).setVisible(true);
    }//GEN-LAST:event_jb_modifyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jb_modify;
    private javax.swing.JCheckBox jcb_negation;
    private javax.swing.JComboBox jcb_values;
    private javax.swing.JLabel jl_name;
    // End of variables declaration//GEN-END:variables

    @Override
    public Selector getSelector() {
        if (allowedValues.size() == amountOfAllValues)
            return SelectorForNominal.getSelUniversal(attributesNumber);
        else
            return SelectorForNominal.getSelSet(attributesNumber, jcb_negation.isSelected(), allowedValues);
    }

    public HashSet<String> getAllowedValues() {
        return allowedValues;
    }
}
class NominalComboBoxModel implements ComboBoxModel {
    private ArrayList<String> data;
    private int selected;

    public void setData(HashSet<String> data) {
        this.data = new ArrayList<String>();
        this.data.addAll(data);
    }

    public void setSelectedItem(Object anItem) {
        selected = data.indexOf(anItem);
    }

    public Object getSelectedItem() {
        return data.get(selected);
    }

    public int getSize() {
        return data.size();
    }

    public Object getElementAt(int index) {
        return data.get(index);
    }

    public void addListDataListener(ListDataListener l) { }

    public void removeListDataListener(ListDataListener l) { }
}
