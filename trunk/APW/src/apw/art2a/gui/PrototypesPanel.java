/*
 * PrototypesPanel.java
 *
 * Created on 2009-08-06, 13:24:21
 */

package apw.art2a.gui;

import apw.art2a.Network;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.NumberFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author nitric
 */
public class PrototypesPanel extends javax.swing.JPanel 
        implements TableModelListener, ItemListener {

    private Network network;

    /** Creates new form PrototypesPanel */
    public PrototypesPanel(Network network) {
        this.network = network;
        initComponents();
        jt_prototypes.getModel().addTableModelListener(this);
        jcb_view.addItemListener(this);
        jt_prototypes.setDefaultRenderer(Double.class, new DoubleRenderer());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jsp = new javax.swing.JScrollPane();
        jt_prototypes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jb_exit = new javax.swing.JButton();
        jb_commit = new javax.swing.JButton();
        jcb_view = new javax.swing.JComboBox();

        jt_prototypes.setModel(network);
        jsp.setViewportView(jt_prototypes);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Created prototypes");

        jb_exit.setText("Close");
        jb_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_exitActionPerformed(evt);
            }
        });

        jb_commit.setText("Commit sample");
        jb_commit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_commitActionPerformed(evt);
            }
        });

        jcb_view.setModel(new DefaultComboBoxModel(apw.art2a.gui.ViewType.values()));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                    .addComponent(jsp, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jcb_view, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                        .addComponent(jb_commit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_exit)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsp, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_exit)
                    .addComponent(jb_commit)
                    .addComponent(jcb_view, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jb_commitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_commitActionPerformed
        network.commitBuffer();
    }//GEN-LAST:event_jb_commitActionPerformed

    private void jb_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jb_exitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jb_commit;
    private javax.swing.JButton jb_exit;
    private javax.swing.JComboBox jcb_view;
    private javax.swing.JScrollPane jsp;
    private javax.swing.JTable jt_prototypes;
    // End of variables declaration//GEN-END:variables

    public void tableChanged(TableModelEvent arg0) {
        if (arg0.getType() == TableModelEvent.UPDATE
                || arg0.getType() == TableModelEvent.INSERT) {
            jt_prototypes.clearSelection();
            jt_prototypes.setRowSelectionInterval(arg0.getFirstRow(), arg0.getFirstRow());
        }
    }

    public void itemStateChanged(ItemEvent arg0) {
        if (arg0.getStateChange() == ItemEvent.SELECTED) {
            network.setView((ViewType)jcb_view.getSelectedItem());
        }
    }

    static class DoubleRenderer extends DefaultTableCellRenderer {

        static NumberFormat formatter = NumberFormat.getNumberInstance();

        public DoubleRenderer() {
            super();
            formatter.setMaximumFractionDigits(4);
        }

        @Override
        public void setValue(Object value) {
            try {
                setText((value == null) ? "" : formatter.format(value));
            } catch (IllegalArgumentException ex) {
                setText("");
            }
        }
    }
}
