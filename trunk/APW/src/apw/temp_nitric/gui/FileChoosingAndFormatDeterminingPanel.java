/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Created on 2009-04-25, 23:58:10
 */

package apw.temp_nitric.gui;

import apw.temp_nitric.logic.DataFile;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Nitric
 */
public class FileChoosingAndFormatDeterminingPanel extends javax.swing.JPanel {
    private File file;
    private String filePath = "";
    private DataFile dataFile = new DataFile();
    private LoadingSamples_Step1 parent;

    public void setParent(LoadingSamples_Step1 parent) {
        this.parent = parent;
    }

    private JFileChooser fileChooser = new JFileChooser();

    public FileChoosingAndFormatDeterminingPanel() {
        initComponents();
        js_attributesCount.setModel(new SpinnerNumberModel(0, 0, 100, 1));
        js_attributesCount.setValue(15);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg_separatorUlamkow = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtf_filePath = new javax.swing.JTextField();
        jb_browse = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jtf_comment = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtf_separator = new javax.swing.JTextField();
        jb_next = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jtf_nullValueTag = new javax.swing.JTextField();
        js_attributesCount = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jrb_dot = new javax.swing.JRadioButton();
        jrb_comma = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Krok 1: Wskaż źródło danych i formatowanie");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setText("Plik:");

        jtf_filePath.setText("C:\\Documents and Settings\\Nitric\\My Documents\\data\\adult.data");

        jb_browse.setText("Przeglądaj");
        jb_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_browseActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Znacznik początku komentarza:");

        jtf_comment.setText("//");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Separator wartości atrybutów:");

        jtf_separator.setText(", ");

        jb_next.setText("Dalej...");
        jb_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_nextActionPerformed(evt);
            }
        });

        jLabel7.setText("Znacznik nieznanej wartości:");

        jtf_nullValueTag.setText("?");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Ilość atrybutów:");
        jLabel8.setDoubleBuffered(true);

        bg_separatorUlamkow.add(jrb_dot);
        jrb_dot.setSelected(true);
        jrb_dot.setText("Kropka");
        jrb_dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_dotActionPerformed(evt);
            }
        });

        bg_separatorUlamkow.add(jrb_comma);
        jrb_comma.setText("Przecinek");
        jrb_comma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_commaActionPerformed(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Separator części całkowitej i ułamkowej:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                        .addGap(4, 4, 4)
                        .addComponent(jrb_comma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrb_dot)
                        .addGap(18, 18, 18)
                        .addComponent(jb_next)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtf_filePath, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_browse))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jtf_comment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtf_separator, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(js_attributesCount, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtf_nullValueTag, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtf_filePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_browse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtf_comment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtf_separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtf_nullValueTag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(js_attributesCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jrb_comma)
                    .addComponent(jrb_dot)
                    .addComponent(jb_next))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jb_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_browseActionPerformed
        int wynik = fileChooser.showOpenDialog(this);
        if (wynik == JFileChooser.APPROVE_OPTION) {
            file = fileChooser.getSelectedFile();
            filePath = file.getAbsolutePath();
            jtf_filePath.setText(filePath);
        }
}//GEN-LAST:event_jb_browseActionPerformed

    private void jb_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_nextActionPerformed
        filePath = jtf_filePath.getText();
        if (file == null)
            file = new File("" + filePath);
        dataFile.setAttributesSeparator(jtf_separator.getText());
        dataFile.setStartOfComment(jtf_comment.getText());
        dataFile.setMissingValueTag(jtf_nullValueTag.getText());
        dataFile.setAttributesCount((Integer)js_attributesCount.getValue());
        dataFile.setDataFile(file);
        boolean everythingIsOK = true;

        try {
            checkFileFormat();
        }
        catch(ParseException ex) {
            everythingIsOK = (JOptionPane.showConfirmDialog(
                this,
                "Linijka " + ex.getErrorOffset() + ": " + ex.getMessage() + ".\n" +
                "Czy mimo to chcesz kontynuować?",
                "Błąd parsowania", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION);
        }

        if (everythingIsOK)
            parent.next(dataFile);
}//GEN-LAST:event_jb_nextActionPerformed

    private void jrb_commaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_commaActionPerformed
        dataFile.setFractionalSeparator(',');
}//GEN-LAST:event_jrb_commaActionPerformed

    private void jrb_dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_dotActionPerformed
        dataFile.setFractionalSeparator('.');
}//GEN-LAST:event_jrb_dotActionPerformed

    private void checkFileFormat() throws ParseException {
        try {
            BufferedReader reader = new BufferedReader(new FileReader(file));
            String line;
            String[] tokens;
            int lineNumber = 0;
            while ((line = reader.readLine()) != null && line.length() > 1) {
                lineNumber++;
                if (line.startsWith(dataFile.getStartOfComment()))
                    continue;                           // skip the comment
                else {
                    // TODO: Removing comments in lines -> would this be useful?
                    tokens = line.split(dataFile.getAttributesSeparator());

                    // Check attributes count
                    if (tokens.length != dataFile.getAttributesCount())
                        throw new ParseException(
                            "Ilość atrybutów = " + tokens.length + " (zamiast " + dataFile.getAttributesCount() + ")",
                            lineNumber
                        );
                }
            }
        }
        catch (FileNotFoundException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }
        catch (IOException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void main(String[] args) {
        LoadingSamples_Step1.main(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bg_separatorUlamkow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jb_browse;
    private javax.swing.JButton jb_next;
    private javax.swing.JRadioButton jrb_comma;
    private javax.swing.JRadioButton jrb_dot;
    private javax.swing.JSpinner js_attributesCount;
    private javax.swing.JTextField jtf_comment;
    private javax.swing.JTextField jtf_filePath;
    private javax.swing.JTextField jtf_nullValueTag;
    private javax.swing.JTextField jtf_separator;
    // End of variables declaration//GEN-END:variables

}
