/*
 * ColumnNameRetriever.java
 *
 * Created on 2009-08-09, 18:51:59
 */

package apw.myART2.gui;

import java.util.ArrayList;
import javax.swing.AbstractListModel;

/**
 *
 * @author nitric
 */
public class ColumnNameRetriever extends javax.swing.JFrame {
    private CNR_ListModel model = new CNR_ListModel();
    private int limit;
    private StartFrame sf;

    /** Creates new form ColumnNameRetriever */
    public ColumnNameRetriever(int limit, StartFrame sf) {
        this.limit = limit;
        this.sf = sf;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jsp = new javax.swing.JScrollPane();
        jl_names = new javax.swing.JList();
        jb_add = new javax.swing.JButton();
        jtf_name = new javax.swing.JTextField();
        jb_remove = new javax.swing.JButton();
        jb_ok = new javax.swing.JButton();
        jb_cancel = new javax.swing.JButton();
        jl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jl_names.setModel(model);
        jsp.setViewportView(jl_names);

        jb_add.setText("Add");
        jb_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_addActionPerformed(evt);
            }
        });

        jtf_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_nameKeyTyped(evt);
            }
        });

        jb_remove.setText("Remove");
        jb_remove.setEnabled(false);
        jb_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_removeActionPerformed(evt);
            }
        });

        jb_ok.setText("OK");
        jb_ok.setEnabled(false);
        jb_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_okActionPerformed(evt);
            }
        });

        jb_cancel.setText("Cancel");
        jb_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cancelActionPerformed(evt);
            }
        });

        jl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl.setText("Enter attribute's names below");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtf_name, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(jsp, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jb_cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb_remove, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb_ok, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb_add, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_add)
                    .addComponent(jtf_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jb_remove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jb_cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_ok))
                    .addComponent(jsp, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cancelActionPerformed
        dispose();
    }//GEN-LAST:event_jb_cancelActionPerformed

    private void jb_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_okActionPerformed
        sf.setColumnNames(model.getList());
    }//GEN-LAST:event_jb_okActionPerformed

    private void jb_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_removeActionPerformed
        model.removeElement(jl_names.getSelectedIndex());
        checkLimits();
    }//GEN-LAST:event_jb_removeActionPerformed

    private void jb_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_addActionPerformed
        model.addElement(jtf_name.getText());
        jtf_name.setText("");
        checkLimits();
    }//GEN-LAST:event_jb_addActionPerformed

    private void jtf_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_nameKeyTyped
        if (evt.getKeyChar() == '\n')
            jb_addActionPerformed(null);
    }//GEN-LAST:event_jtf_nameKeyTyped

    private void checkLimits() {
        boolean limitReached = model.getSize() >= limit;
        boolean zero = model.getSize() == 0;
        jb_add.setEnabled(!limitReached);
        jb_remove.setEnabled(!zero);
        jb_ok.setEnabled(limitReached);
        if (limitReached)
            jb_ok.requestFocusInWindow();
        else
            jtf_name.requestFocusInWindow();
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ColumnNameRetriever(5, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jb_add;
    private javax.swing.JButton jb_cancel;
    private javax.swing.JButton jb_ok;
    private javax.swing.JButton jb_remove;
    private javax.swing.JLabel jl;
    private javax.swing.JList jl_names;
    private javax.swing.JScrollPane jsp;
    private javax.swing.JTextField jtf_name;
    // End of variables declaration//GEN-END:variables

}

class CNR_ListModel extends AbstractListModel {
    private ArrayList<String> list = new ArrayList<String>();

    public int getSize() {
        return list.size();
    }

    public Object getElementAt(int arg0) {
        return arg0 >= list.size() ? null : list.get(arg0);
    }

    public void addElement(String s) {
        list.add(s);
        fireContentsChanged(this, 0, list.size());
    }

    public void removeElement(int i) {
        if (i < list.size()) {
            list.remove(i);
            fireContentsChanged(this, 0, list.size());
        }
    }

    public ArrayList<String> getList() {
        return list;
    }
}
